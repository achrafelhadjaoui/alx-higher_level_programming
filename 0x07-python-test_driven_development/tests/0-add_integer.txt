The ``0-add_integer`` module
============================


Testing ``add_integer``
---------------------


Import function from module:

	>>> add_integer = __import__('0-add_integer').add_integer

Test two integers:

	>>> add_integer(10, 5)
	15

test two integers one negative:

	>>> add_integer(10, -5)
	5

test one int:

	>>> add_integer(2)
	100

test two floats:

	>>> add_integer(5.0, 10.5)
	15

test int and None:

	>>> add_integer(5, None)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

test missing two arguments:

	>>> add_integer(None, None)
	Traceback (most recent call last):
        ...
	TypeError: a must be an integer

test int and string:

	>>> add_integer(5, "Hello")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

test string and int:

	>>> add_integer("Hello", 5)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

test two strings:

	>>> add_integer("Hello", "Hello")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

test infinity:

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

test nan:

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

test nan:

	>>> add_integer(2, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
